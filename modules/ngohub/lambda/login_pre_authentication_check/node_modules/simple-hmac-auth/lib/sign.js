"use strict";
//
//  Simple HMAC Auth
//  /src/sign.js
//  Created by Jesse T Youngblood on 3/24/16 at 11:31am
//
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sign = exports.algorithms = void 0;
const crypto_1 = __importDefault(require("crypto"));
// Permitted algorithms
exports.algorithms = [
    'sha1',
    'sha256',
    'sha512'
];
/**
 * Generate a HMAC hash for a canonicalized request
 * @param   {string} canonical A canonicalized version of a request
 * @param   {string} secret    A secret key
 * @param   {string} algorithm Algorithm to use to generate the hmac
 * @returns {string}   Signature for this request
 */
function sign(canonical, secret, algorithm) {
    if (!exports.algorithms.includes(algorithm)) {
        throw new Error(`Invalid algorithm: "${algorithm}"`);
    }
    return crypto_1.default.createHmac(algorithm, secret).update(canonical).digest('hex');
}
exports.sign = sign;
module.exports = { sign, algorithms: exports.algorithms };
